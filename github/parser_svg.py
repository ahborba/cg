d="M 21.333333 1.2504996 C 14.4 2.8504995 6.7999998 9.117166 2.9333333 16.183833 0.53333332 20.850499 0 23.917166 0 34.450499 0 45.517165 0.39999999 48.050498 3.4666666 53.783832 9.4666664 65.517165 20.533333 70.450498 35.066666 68.050498 c 4.666666 -0.8 9.866666 -2.4 11.733333 -3.466667 3.066666 -2.133333 3.2 -2.8 3.2 -16.799999 V 33.117165 H 37.333332 24.666666 v 4 c 0 3.333334 0.533333 4 3.2 4 1.733333 0 5.066667 0.4 7.333333 0.8 4 0.8 4.133333 1.2 4.133333 7.2 0 4.533333 -0.533333 6.666667 -2.133333 7.2 -3.733333 1.466666 -11.2 0.8 -15.333333 -1.333333 C 9.5999998 48.717165 9.8666664 20.050499 22.133333 13.783833 c 3.066666 -1.733334 6.666666 -2.133334 13.333333 -1.733334 l 9.066666 0.533334 1.2 -5.0666669 1.333333 -4.9333332 -6.666666 -1.3333333 c -7.6 -1.73333332 -11.6 -1.59999999 -19.066666 0 z"
X=0
Y=0
i=0

x,y=0,0
curva = []
d= d.split(sep=' ')
def isFloat(string):
    try:
        float(string)
        return True
    except ValueError:
        return False

while i in range(0,len(d)):
    c = d[i]
    if c =='M':
        i+=1
        X = float(d[i])
        i+=1
        Y = float(d[i])
        print(x, y)
    if c == 'C':
        i+=1
        c = d[i]
        nova_curva = []
        print(c)
        j = 0
        x = 0
        y = 0
        while isFloat(c):
            if j == 0:
                x = X + float(c)
            if j == 1:
                y = Y+ float(c)
            if j == 2:
                nova_curva.append([x,y,0])    
                j=0
                i+=1
                c = d[i]
                continue
            i+=1
            c = d[i]
            
            j+=1
        curva.append(nova_curva)
    i+=1
print(curva)